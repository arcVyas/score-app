html
  head
    title Scorecard - #{title}
    link(rel="icon" href="/images/site-icon.png")
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')
    link(rel="stylesheet" type="text/css" href="https://bootswatch.com/4-alpha/lux/bootstrap.min.css")
    style.

      .btn-primary {
        background-color: #1f9bcf;
      }
  body
    .container(style="padding-left:25px;padding-right:25px;margin-left:25px;margin-right:25px;width:auto")
      .row.col-sm-12(style="padding-top:20px;padding-bottom:20px;")
        h3 Scorecard for Match -  #{title} 
        span(id="matchId" style="visibility:hidden") #{title}

      .row(style="padding-top:20px;padding-bottom:20px")
        .col-sm-2
          span NEXT BALL : 
          h5 
            span(id="currentBall") 
        .col-sm-2
          span SCORE : 
          h5
            span(id="ballTotal")
        .col-sm-2
          span LOG : 
          h5
            span(id="ballLog") 
        .col-sm-6(align="right")
          h1
            span(id="score") #{data.totalScore} / #{data.wickets}

      .row
        .col-sm-12(style="padding-right:20px;")
          .row(style="padding-top:15px; padding-bottom:10px;")
            .col-sm-3
              button.btn.btn-warning.btn-lg.btn-block(id='score_0',style="font-size: 1.25rem;") 0
            .col-sm-3
              button.btn.btn-success.btn-lg.btn-block(id='score_1',style="font-size: 1.25rem;") 1
            .col-sm-3
              button.btn.btn-success.btn-lg.btn-block(id='score_2',style="font-size: 1.25rem;") 2
            .col-sm-3
              button.btn.btn-success.btn-lg.btn-block(id='score_3',style="font-size: 1.25rem;") 3
          .row(style="padding-top:15px; padding-bottom:10px;")
            .col-sm-4
              button.btn.btn-success.btn-lg.btn-block(id='score_4',style="font-size: 1.25rem;") 4
            .col-sm-4
              button.btn.btn-success.btn-lg.btn-block(id='score_5',style="font-size: 1.25rem;") 5
            .col-sm-4
              button.btn.btn-success.btn-lg.btn-block(id='score_6',style="font-size: 1.25rem;") 6

          .row(style="padding-top:15px; padding-bottom:10px;")
            .col-sm-4
              button.btn.btn-warning.btn-lg.btn-block(id='score_WIDE' , style ="font-size: 1.25rem;background-color: #9fb7a8;") WIDE
            .col-sm-4
              button.btn.btn-warning.btn-lg.btn-block(id='score_NOBALL' , style ="font-size: 1.25rem;background-color: #9fb7a8;") NOBALL
            .col-sm-4
              button.btn.btn-danger.btn-lg.btn-block(id='score_OUT',style="font-size: 1.25rem;") OUT   
          .col-lg-4(style="border-style:solid;border-color:white; visibility:hidden")
          .row(style="padding-top:15px; padding-bottom:10px;")
            .col-sm-6(style="font-weight:bold;font-size: 1.0rem;")
              span *
              span#striker 
            .col-sm-3(style="font-weight:bold;font-size: 1.0rem;")
              span#strikerScore 0(0)
            .col-sm-3
              .dropdown
                button#dropdownMenuButton.btn.btn-secondary.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                  | Pick Player
                .dropdown-menu#strikers(aria-labelledby='dropdownMenuButton')

          .row(style="padding-top:15px; padding-bottom:10px;")
            .col-sm-6(style="font-size: 1.0rem;")
              span#nstriker 
            .col-sm-3(style="font-size: 1.0rem;")
              span#nstrikerScore 0(0)
            .col-sm-3
              .dropdown
                button#dropdownMenuButton.btn.btn-secondary.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                  | Pick Player
                .dropdown-menu#nstrikers(aria-labelledby='dropdownMenuButton')

          .row(style="padding-top:15px; padding-bottom:10px;")
            .col.sm-12
                button.btn.btn-primary.btn(id='swapStriker') SWAP
                
      .row(style="padding-top:40px;")

        table.table
          thead
            tr
              th Overs
              th x.1
              th x.2
              th x.3
              th x.4
              th x.5
              th x.6
              th Total
              th End Of Over
          tbody
            - var eooScore=0
            each ballsInOver,over in data.overs
              tr
                th(scope='row') 
                  span(id="over_"+over) #{over}
                - var overTotal=0
                each ball in ballsInOver
                  - var ballScore = ball.score;
                  - var ballScoreTxt
                  - if(ballScore==undefined){
                      - ballScoreTxt=" "
                      - ballScore=0
                  -}else{
                      - ballScoreTxt=ballScore
                  -}
                  - overTotal=overTotal+ballScore
                  td 
                    a(id="ball_a_"+ball.ball href="javascript:loadBall("+ball.ball+")" class="btn btn-primary" style="width: 56px;border-color:#04fd08; border-width=3;border-style:none;")
                      span(id="ball_"+ball.ball style="padding-top: 5px;padding-bottom: 5px;padding-left: 5px;padding-right: 5px;") #{ballScoreTxt}
                      span(id="wicket_ball_"+ball.ball style="visibility:hidden") #{ball.wicket}
                td 
                  span(id="overTotal_"+over)
                td 
                  span(id="eooScore_"+over)

      .row.col-sm-12(id="messages")

  script(src='//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.5/umd/popper.js')
  script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js')
  
  script.
    var ballInProgress = ["WIDE", "NOBALL"]
    var validBalls = ["0", "1", "2", "3", "4", "5", "6"]
    var lastSelected = "0.0"
    var startBall="0.0"
    var nextPointer = "1.1"
    var wickets = 0

    function changePlayer(where, player) {
        //console.log("changing " + where + ".." + player)
        if (where == "striker") {
            $("#striker").text(player)
        } else if (where == "nstriker") {
            $("#nstriker").text(player)
        }
        loadChangePlayerList()
        getStrikerScore()
        getNStrikerScore()
    }

    function getStrikerScore() {
        var matchId = $("#matchId").text()
        $.get("/matches/" + matchId + "/scorecard/card/" + $("#striker").text(),
            function(data, status) {
                if (!data || data.length < 1) {
                    $("#strikerScore").text("0")
                } else {
                    $("#strikerScore").text(data[0].total)
                }
            });
    }

    function getNStrikerScore() {
        var matchId = $("#matchId").text()
        $.get("/matches/" + matchId + "/scorecard/card/" + $("#nstriker").text(),
            function(data, status) {
                if (!data || data.length < 1) {
                    $("#nstrikerScore").text("0")
                } else {
                    $("#nstrikerScore").text(data[0].total)
                }
            });
    }

    function swapBatsmen() {
        var striker = $("#striker").text()
        var nstriker = $("#nstriker").text()
        var strikerScore = $("#strikerScore").text()
        var nstrikerScore = $("#nstrikerScore").text()
        //console.log("stricker:"+striker)
        //console.log("nstricker:"+nstriker)
        $("#striker").text(nstriker)
        $("#nstriker").text(striker)
        $("#strikerScore").text(nstrikerScore)
        $("#nstrikerScore").text(strikerScore)
    }
    function prevBall(ball){
      var result=""
      var over = ball.split(".")[0]
      var b = ball.split(".")[1]
      if(b == 1){
        result = (parseInt(over)-1)+"."+6
      }else{
        result = over+"."+parseInt(i)-1
      }
      return result
    }
    function nextBall(ball){
      var result=""
      var over = ball.split(".")[0]
      var b = ball.split(".")[1]
      if(b == 6){
        result = (parseInt(over)+1)+"."+1
      }else{
        result = over+"."+parseInt(i)+1
      }
      return result
    }
    $(document).ready(function() {

        loadChangePlayerList();

        calculateScore()
        loadBall(prevBall(nextPointer),false,true)

        $("#swapStriker").click(function() {
            swapBatsmen()
        })

        $("[id^=score_]").click(function() {

            var buttonPressed = $(this).text().trim()

            var scoreLog = $("#ballLog").text();
            console.log("Before:" + scoreLog)

            if (!scoreLog.endsWith("+")) {
                scoreLog = "" + buttonPressed
            } else {
                scoreLog = scoreLog + buttonPressed
            }

            if (ballInProgress.includes(buttonPressed)) {
                scoreLog = scoreLog + "+"
            }

            var scoreObj = getScoreObj(scoreLog)
            $("#ballTotal").text(scoreObj.score)
            $("#ballLog").text(scoreObj.scoreLog)
            console.log("After:" + scoreLog)
            saveBall(buttonPressed, $("#currentBall").text(), scoreObj);
        });
    });

    /*$(document).ajaxStart(function(){ 
      $('#ajaxBusy').show(); 
    }).ajaxStop(function(){ 
      $('#ajaxBusy').hide();
    });*/

    function getScoreObj(scoreLog) {
        var entries = scoreLog.split("+")
        var scoreObj = {}
        var score = 0
        var wicket = false

        for (var i = 0; i < entries.length; i++) {
            console.log(entries[i])
            if (entries[i] == "OUT") {
                score = score + 0
                wicket = true
            } else if (ballInProgress.includes(entries[i])) {
                score = score + 1
            } else if (validBalls.includes(entries[i])) {
                score = score + parseInt(entries[i])
            }
            console.log(score)
        }
        scoreObj["score"] = score
        scoreObj["scoreLog"] = scoreLog
        scoreObj["wicket"] = wicket
        return scoreObj
    }

    function calculateScore() {
        var totalScore = 0
        wickets = 0
        var oversComplete = "0.0"
        nextPointer = ""
        $('[id^="over_"]').each(function(index) {
            var over = $(this).text()
            var overTotal = 0
            var inCompleteOver = false
            for (var i = 1; i <= 6; i++) {
                var bScore = $("#ball_" + over + "\\." + i).text()
                if (bScore == " ") {
                    bScore = 0
                    inCompleteOver = true
                    if (nextPointer == "")
                        nextPointer = over + "." + i
                } else {
                    if (i >= 6) {
                        oversComplete = parseInt(over) + 1
                    } else {
                        oversComplete = over + "." + i
                    }

                    bScore = parseInt(bScore)
                }
                overTotal = overTotal + bScore
                var wicket = $("#wicket_ball_" + over + "\\." + i).text()
                $("#ball_" + over + "\\." + i).css("color", '')
                if (wicket == "true") {
                    wickets = wickets + 1
                    $("#ball_" + over + "\\." + i).css("color", "red")
                } else if (wickets >= 10) {
                    $("#ball_a_" + over + "\\." + i).hide()
                }
            }

            totalScore = totalScore + overTotal
            if (inCompleteOver) {
                $("#overTotal_" + over).text("")
                $("#eooScore_" + over).text("")
            } else {
                $("#overTotal_" + over).text(overTotal)
                $("#eooScore_" + over).text(totalScore + "/" + wickets + " ( " + oversComplete + ".0 )")
            }

        })
        var scoreText = totalScore + " / " + wickets + " ( " + oversComplete + " )"
        $("#score").text(scoreText)
    }

    function loadBall(ballId, skipBatters,moveNext) {
        var matchId = $("#matchId").text()
        $.get("/matches/" + matchId + "/scorecard/balls/" + ballId,
            function(scoreCard, status) {
                console.log("Data: " + scoreCard + "\nStatus: " + status);
                var data = scoreCard.ballByBall[0]
                if (!data.score)
                    data.score = 0
                if (!data.scoreLog)
                    data.scoreLog = ""
                $("#currentBall").text(data.ball)
                $("#ballTotal").text(data.score)
                $("#ballLog").text(data.scoreLog)
                if (!skipBatters) {
                    $("#striker").text(data.striker)
                    $("#nstriker").text(data.nstriker)
                }
                $("#ball_a_" + data.ball.replace(".", "\\.")).css("border-style", "solid")
                $("#ball_a_" + lastSelected.replace(".", "\\.")).css("border-style", "none")
                lastSelected = data.ball
                loadChangePlayerList()
                getStrikerScore();
                getNStrikerScore();
                if(moveNext){
                  next((data.score).toString())
                }
            });
        calculateScore()
    }

    function getPlayerList() {
        var players = [];
        $.ajax({
            url: "/matches/" + $("#matchId").text() + "/playing11",
            async: false,
            success: function(result) {
                console.log("RESULT: " + result)
                players = result
            }
        })
        return players
    }

    function loadChangePlayerList() {
        var strikers = "";
        var nstrikers = "";
        var menuList;
        var playerList = getPlayerList();
        var striker = $("#striker").text()
        var nstriker = $("#nstriker").text()

        playerList.forEach(function(item) {
            if (item != nstriker && item != striker) {
                strikers = strikers + '<a class="dropdown-item" href="javascript:changePlayer(\'striker\',\'' + item + '\')">' + item + '</a>';
                nstrikers = nstrikers + '<a class="dropdown-item" href="javascript:changePlayer(\'nstriker\',\'' + item + '\')">' + item + '</a>';
            }
        })
        $("#strikers").html(strikers)
        $("#nstrikers").html(nstrikers)
    }

    function saveBall(scoreButtonPressed, ballId, scoreObj) {

        var matchId = $("#matchId").text()
        var score = scoreObj["score"]
        var scoreLog = scoreObj["scoreLog"]
        var wicket = scoreObj["wicket"]
        var striker = $("#striker").text()
        var nstriker = $("#nstriker").text()

        console.log(matchId + ";" + ballId + ";" + score + ";" + scoreLog);

        $('button').prop('disabled', true);
        $.post("/matches/" + matchId + "/scorecard/balls/" + ballId, {
                score: score,
                scoreLog: scoreLog,
                wicket: wicket,
                striker: striker,
                nstriker: nstriker
            },
            function(data, status) {
                console.log("Data: " + data + "\nStatus: " + status);
                $("#ball_" + ballId.replace(".", "\\.")).text(score);
                if (wicket) {
                    $("#wicket_ball_" + ballId.replace(".", "\\.")).text("true");
                } else {
                    $("#wicket_ball_" + ballId.replace(".", "\\.")).text("false");
                }
                calculateScore();
                next(scoreButtonPressed)
                $('button').prop('disabled', false);
            });

    }

    function setBatsmenForNextBall(scoreButtonPressed, nextBall) {

        if (scoreButtonPressed == "OUT") {
            $("#striker").text("")
        } else if (!["WIDE", "NOBALL", "0", "2", "4", "6"].includes(scoreButtonPressed)) {
            swapBatsmen()
        }
        if (nextBall.includes(".1")) {
            swapBatsmen()
        }
    }

    function next(scoreButtonPressed, ball) {
        var currentBall= $("#currentBall").text()

        if (!ballInProgress.includes(scoreButtonPressed)) {
            $("#ball_" + currentBall.replace(".", "\\.")).css("border-style", "none")
            
        } 
        var nextBall = getNextBall(currentBall)
        setBatsmenForNextBall(scoreButtonPressed, nextBall)
        loadBall(nextBall, true)
    }

    function getNextBall(currentBall) {
        var over = currentBall.split(".")[0]
        var ball = currentBall.split(".")[1]
        if (ball >= 6) {
            over = parseInt(over) + 1
            ball = 1
        } else {
            ball = parseInt(ball) + 1
        }
        return (over + "." + ball);
    }
